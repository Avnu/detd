// SPDX-License-Identifier: BSD-3-Clause
// Copyright(C) 2020-2025 Intel Corporation
// Authors:
//   Hector Blanco Alcaine

// Application interface for the detd System Service using protobuf
// Some enum and struct-like messages used for the protocol are defined as well

// The protocol uses Request and Response messages for different methods. For
// example, from initialization there is an InitRequest and InitResponse.
// Each request or response is then wrapped into a DetdMessage using oneof.
// This allows to dynamically identify the message types in the handling code.
// For the requests and responses supported, please check the definition of
// DetdMessage below.


syntax = "proto3";

enum DataPath {
    AF_PACKET = 0;
    AF_XDP_ZC = 1;
}

enum TxSelection{
    EST = 0;
    STRICT_PRIO = 1;
}


message HintsMessage {
	TxSelection hints_tx_selection = 1;
	bool hints_tx_selection_offload = 2;
	DataPath hints_data_path = 3;
	bool hints_preemption = 4;
	bool hints_launch_time_control = 5;
}


message InitRequest {
	string interface = 1;
	optional HintsMessage hints = 2;
}


message InitResponse {
	bool ok = 1;
}


message StreamQosRequest {
	string interface = 1;
	uint32 period = 2;
	uint32 size = 3;
	string dmac = 4;
	uint32 vid = 5;
	uint32 pcp = 6;
	uint32 txmin = 7;
	uint32 txmax = 8;
	bool   setup_socket = 9;
	uint32 basetime = 10;
	bool talker = 11;
	string maddress = 12;
}


message StreamQosResponse {
	bool    ok = 1;
	string  vlan_interface = 2;
	uint32  socket_priority = 3;
}


message DetdMessage {
	oneof msg {
	    InitRequest       init_request = 1;
	    InitResponse      init_response = 2;
	    StreamQosRequest  stream_qos_request = 3;
	    StreamQosResponse stream_qos_response = 4;
	}
}
